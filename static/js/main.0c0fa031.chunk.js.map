{"version":3,"sources":["components/TodoList/User/UserDetails/UserDetails.js","components/TodoList/User/User.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Filters/Filters.js","App.js","serviceWorker.js","index.js"],"names":["UserDetails","props","website","phone","companyName","react_default","a","createElement","className","href","User","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","detailed","showingLogin","_toggleDetails","bind","assertThisInitialized","_showLogin","_hideLogin","setState","prevState","_this$state","_this$props","name","username","_this$props2","email","details","UserDetails_UserDetails","login","test","concat","onClick","onMouseOver","onMouseLeave","CSSTransitionGroup_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Component","TodoItem","_handleChange","onToggleCompleted","id","title","completed","user","htmlFor","type","checked","onChange","User_User_User","TodoList","content","loaded","todosData","map","item","TodoList_TodoItem_TodoItem","assign","key","handleCompletedChange","isLoading","_getButtonAttributes","objectSpread","value","disabled","loadDataClick","getStatesContent","Filters","handleChanges","event","onFiltersChange","target","names","_props$filters","filters","showingWithStatus","contentEditable","App","filteredTodosData","isDataLoaded","toggleStatus","handleLoadDataClick","handleFiltersChanges","_this2","xhrTodos","XMLHttpRequest","xhrUsers","todos","users","setInitialTodosData","usersObject","reduce","acc","person","defineProperty","userId","toConsumableArray","open","responseType","send","addEventListener","readyState","response","toggledItemId","_prevState$filters","newTodos","filter","todo","includes","filterName","newFilters","_ref","components_Filters_Filters","Set","_ref2","components_TodoList_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c0fa031.chunk.js","sourcesContent":["import React from 'react';\nimport './UserDetails.css';\n\nexport default function UserDetails(props) {\n  const { website, phone, companyName } = props;\n\n  return (\n    <div className=\"info-details\">\n      <ul>\n        <li>\n          User website: <a href={website}>\n          {website}\n        </a>\n        </li>\n        <li>Phone: {phone}</li>\n        <li>Company: \"{companyName}\"</li>\n      </ul>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport UserDetails from './UserDetails/UserDetails';\nimport './User.css';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\n\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailed: false,\n      showingLogin: false\n    };\n\n    this._toggleDetails = this._toggleDetails.bind(this);\n    this._showLogin = this._showLogin.bind(this);\n    this._hideLogin = this._hideLogin.bind(this);\n  }\n\n  _toggleDetails() {\n    this.setState(prevState => ({\n      detailed: !prevState.detailed\n    }));\n  }\n\n  _showLogin() {\n    this.setState({\n      showingLogin: true\n    });\n  }\n\n  _hideLogin() {\n    this.setState({\n      showingLogin: false\n    });\n  }\n\n  render() {\n    const { detailed, showingLogin } = this.state;\n    const { name, username, phone, companyName } = this.props;\n    let { email, website } = this.props;\n    const details = detailed\n      ? (\n        <div className=\"login\">\n          <UserDetails\n            website={website}\n            phone={phone}\n            companyName={companyName}\n          />\n        </div>\n      ) : '';\n    const login = showingLogin\n      ? (<div className=\"login\">Write to user {username}</div>)\n      : '';\n\n    if (!(/^mailto:\\.+/.test(email))) email = `mailto:${email}`;\n    if (!(/^https:\\/\\/\\.+/.test(website))) website = `https://${website}`;\n\n    return (\n      <div className=\"info-user\">\n        <div className=\"info-header\">\n          <span className=\"detalizer\" onClick={this._toggleDetails}>\n            {detailed ? '--' : '+'}\n          </span>\n          <a\n            href={email}\n            onMouseOver={this._showLogin}\n            onMouseLeave={this._hideLogin}\n          >\n            {name}\n          </a>\n          <CSSTransitionGroup\n            transitionName=\"detailed\"\n            transitionEnterTimeout={800}\n            transitionLeaveTimeout={500}\n          >\n            {login}\n            {details}\n          </CSSTransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport User from '../User/User';\nimport './TodoItem.css';\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange() {\n    this.props.onToggleCompleted(this.props.id);\n  }\n\n  render() {\n    const { title, completed, user } = this.props;\n\n    return (\n      <section\n        className={completed ? 'list-item green' : 'list-item red'}\n      >\n        <div className=\"item-subsection main-content\">\n          <label\n            htmlFor=\"state-checkbox\"\n            className={\n              completed\n                ? 'todo-state item-subsection green'\n                : 'todo-state item-subsection red'\n            }\n          >\n            <input\n              type=\"checkbox\"\n              name=\"state-checkbox\"\n              id=\"state-checkbox\"\n              checked={completed}\n              onChange={this._handleChange}\n            />\n            {\n              completed\n                ? 'Done'\n                : 'In process'\n            }\n          </label>\n          <div className=\"todo-title  item-subsection\">{title}</div>\n        </div>\n        <User {...user} />\n      </section>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem/TodoItem';\nimport './TodoList.css';\n\nfunction TodoList(props) {\n  const getButtonAttributes = (isLoading) => {\n    return {\n      ...(isLoading === true\n        ? {\n          className: 'load-button disabled',\n          value: 'Loading...'\n        } : {\n          className: 'load-button',\n          value: 'Load data'\n        }\n      ),\n      disabled: !!isLoading\n    }\n  };\n\n  const getStatesContent = (loaded) => {\n    if (loaded === true) {\n      return props.todosData.map(item =>\n        (<TodoItem {...item} key={item.id} onToggleCompleted={props.handleCompletedChange}/>)\n      );\n    } else {\n      const {\n        className,\n        disabled,\n        value,\n      } = getButtonAttributes(loaded !== null);\n\n      return (\n        <button\n          className={className}\n          disabled={disabled}\n          onClick={props.loadDataClick}\n        >{value}\n        </button>\n      );\n    }\n  };\n\n  const content = getStatesContent(props.loaded);\n  return (\n    <section className='container'>\n      {content}\n    </section>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './Filters.css'\n\nfunction Filters(props) {\n  const handleChanges = event => {\n    props.onFiltersChange(event.target.name, event.target.value);\n  };\n  const { names } = props;\n  const { title, showingWithStatus, name } = props.filters;\n\n  return (\n    <section className=\"filters\">\n      <label htmlFor=\"title\" className=\"label-wrapper\">\n        <div>\n          Search in title:&#8195;\n          <span className=\"arrow\">&#10097;</span>\n        </div>\n        <input\n          className=\"inputs\"\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={handleChanges}\n        />\n      </label>\n\n      <label htmlFor=\"showingStatus\" className=\"label-wrapper\">\n        <div>\n          Showed status: {showingWithStatus}&#8195;\n          <span className=\"arrow\">&#10097;</span>\n        </div>\n        <select\n          className=\"inputs\"\n          id=\"showingStatus\"\n          name=\"showingWithStatus\"\n          contentEditable={false}\n          value={showingWithStatus}\n          onChange={handleChanges}\n        >\n          <option key=\"All\" value=\"All\">All</option>\n          <option key=\"In process\" value=\"In process\">In process</option>\n          <option key=\"Done\" value=\"Done\">Done</option>\n        </select>\n      </label>\n\n      <label htmlFor=\"name\" className=\"label-wrapper\">\n        <div>\n          Show only user:&#8195;\n          <span className=\"arrow\">&#10097;</span>\n        </div>\n        <select\n          className=\"inputs\"\n          id=\"name\"\n          value={name}\n          name=\"name\"\n          contentEditable={false}\n          onChange={handleChanges}\n        >\n          {names.map(name => (<option key={name}>{name}</option>))}\n        </select>\n      </label>\n    </section>\n  );\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport './App.css';\nimport TodoList from \"./components/TodoList/TodoList\";\nimport Filters from './components/Filters/Filters';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todosData: null,\n      filteredTodosData: null,\n      isDataLoaded: null,\n      filters: {\n        title: '',\n        showingWithStatus: 'All',\n        name: ''\n      }\n    };\n\n    this.toggleStatus = this.toggleStatus.bind(this);\n    this.handleLoadDataClick = this.handleLoadDataClick.bind(this);\n    this.handleFiltersChanges = this.handleFiltersChanges.bind(this);\n  }\n\n  handleLoadDataClick() {\n    const todosURL = 'https://jsonplaceholder.typicode.com/todos';\n    const usersURL = 'https://jsonplaceholder.typicode.com/users';\n    const xhrTodos = new XMLHttpRequest();\n    const xhrUsers = new XMLHttpRequest();\n    let todos = null;\n    let users = null;\n    const setInitialTodosData = () => {\n      const usersObject = users.reduce(\n        (acc, person) => ({...acc, [person.id]: person}),\n        {}\n      );\n      const todosData = todos.map(item => {\n        const {\n          id, userId, title, completed\n        } = item;\n\n        return { id, title, completed, user: usersObject[userId] };\n      });\n\n      this.setState({\n        todosData: [ ...todosData ],\n        filteredTodosData: [ ...todosData ],\n        isDataLoaded: true\n      });\n    };\n\n    if (this.state.isDataLoaded === null) this.setState( {\n      isDataLoaded: false\n    });\n\n    xhrTodos.open('GET', todosURL);\n    xhrUsers.open('GET', usersURL);\n    xhrTodos.responseType = 'json';\n    xhrUsers.responseType = 'json';\n    xhrTodos.send();\n    xhrUsers.send();\n\n    xhrTodos.addEventListener('load', () => {\n      if (xhrTodos.readyState === 4) {\n        todos = xhrTodos.response;\n        if (users !== null) {\n          setInitialTodosData();\n        }\n      }\n    });\n    xhrUsers.addEventListener('load', () => {\n      if (xhrTodos.readyState === 4) {\n        users = xhrUsers.response;\n        if (todos !== null) {\n          setInitialTodosData();\n        }\n      }\n    });\n  };\n\n  toggleStatus(toggledItemId) {\n    this.setState(prevState => {\n      const {\n        todosData, filters: { title, name, showingWithStatus }\n      } = prevState;\n      const newTodos = todosData.map(item => {\n        const { id, title, user } = item;\n        let { completed } = item;\n\n        if (id === toggledItemId) completed = !completed;\n\n        return {\n          id: id,\n          title: title,\n          completed: completed,\n          user: user\n        }\n      });\n\n      return {\n        todosData: newTodos,\n        filteredTodosData: newTodos.filter(\n          todo => {\n            return  todo.title.includes(title)\n              && (\n                showingWithStatus !== 'All'\n                  ? todo.completed === (showingWithStatus === 'Done')\n                  : true\n              )\n              && todo.user.name.includes(name);\n          }\n        )\n      }\n    });\n  }\n\n  handleFiltersChanges(filterName, value) {\n    this.setState(\n      prevState => {\n        const newFilters = {\n          ...prevState.filters,\n          [filterName]: value\n        };\n\n        return {\n          filteredTodosData: prevState.todosData.filter(\n            ({ title, completed, user: { name } }) => {\n              return  title.includes(newFilters.title)\n                && (\n                  newFilters.showingWithStatus !== 'All'\n                    ? completed === (\n                        newFilters.showingWithStatus === 'Done'\n                      )\n                    : true\n                )\n                && name.includes(newFilters.name);\n            }\n          ),\n          filters: { ...newFilters }\n        }\n      }\n    );\n  }\n\n  render() {\n    const {\n      filteredTodosData,\n      isDataLoaded,\n      filters\n    } = this.state;\n\n    return (\n      <div>\n        <h1>ToDo. . .</h1>\n        {\n          isDataLoaded\n            ? (\n              <Filters\n                filters={filters}\n                names={\n                  [\n                    ...(new Set(\n                      [\n                        ...filteredTodosData.map(\n                          ({ user: { name } }) => name\n                        ),\n                        filters.name,\n                        ''\n                      ]\n                    ))\n                  ]\n                }\n                onFiltersChange={this.handleFiltersChanges}\n              />\n            ) : ''\n        }\n        <TodoList\n          loaded={isDataLoaded}\n          todosData={filteredTodosData}\n          loadDataClick={this.handleLoadDataClick}\n          handleCompletedChange={this.toggleStatus}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}